<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-02T12:33:08 IST" name="Default suite" finished-at="2022-12-02T12:33:18 IST" duration-ms="10392">
    <groups>
    </groups>
    <test started-at="2022-12-02T12:33:08 IST" name="Default test" finished-at="2022-12-02T12:33:18 IST" duration-ms="10392">
      <class name="com.flipkart.FlipkartAutomatePOM">
        <test-method is-config="true" signature="openServer()[pri:0, instance:com.flipkart.FlipkartAutomatePOM@6f204a1a]" started-at="2022-12-02T12:33:08 IST" name="openServer" finished-at="2022-12-02T12:33:08 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openServer -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.flipkart.FlipkartAutomatePOM@6f204a1a]" started-at="2022-12-02T12:33:08 IST" name="launchApp" finished-at="2022-12-02T12:33:18 IST" duration-ms="10057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="flipkartWaterHeater()[pri:0, instance:com.flipkart.FlipkartAutomatePOM@6f204a1a]" started-at="2022-12-02T12:33:18 IST" name="flipkartWaterHeater" finished-at="2022-12-02T12:33:18 IST" duration-ms="18" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.NoSuchMethodException: jdk.proxy2.$Proxy11.proxyClassLookup()]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.NoSuchMethodException: jdk.proxy2.$Proxy11.proxyClassLookup()
at io.appium.java_client.pagefactory.bys.builder.AppiumByBuilder.prepareAnnotationMethods(AppiumByBuilder.java:85)
at io.appium.java_client.pagefactory.bys.builder.AppiumByBuilder.getFilledValue(AppiumByBuilder.java:92)
at io.appium.java_client.pagefactory.bys.builder.AppiumByBuilder.createBy(AppiumByBuilder.java:145)
at io.appium.java_client.pagefactory.DefaultElementByBuilder.buildMobileNativeBy(DefaultElementByBuilder.java:137)
at io.appium.java_client.pagefactory.DefaultElementByBuilder.buildBy(DefaultElementByBuilder.java:186)
at io.appium.java_client.pagefactory.AppiumElementLocatorFactory.createLocator(AppiumElementLocatorFactory.java:57)
at io.appium.java_client.pagefactory.AppiumElementLocatorFactory.createLocator(AppiumElementLocatorFactory.java:44)
at io.appium.java_client.pagefactory.AppiumElementLocatorFactory.createLocator(AppiumElementLocatorFactory.java:1)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:56)
at io.appium.java_client.pagefactory.AppiumFieldDecorator.decorate(AppiumFieldDecorator.java:172)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at object_repository.HomePage.<init>(HomePage.java:41)
at com.flipkart.FlipkartAutomatePOM.flipkartWaterHeater(FlipkartAutomatePOM.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NoSuchMethodException: jdk.proxy2.$Proxy11.proxyClassLookup()
at java.base/java.lang.Class.getMethod(Class.java:2195)
at io.appium.java_client.pagefactory.bys.builder.AppiumByBuilder.prepareAnnotationMethods(AppiumByBuilder.java:83)
... 41 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flipkartWaterHeater -->
        <test-method is-config="true" signature="logout()[pri:0, instance:com.flipkart.FlipkartAutomatePOM@6f204a1a]" started-at="2022-12-02T12:33:18 IST" name="logout" finished-at="2022-12-02T12:33:18 IST" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="closeServer()[pri:0, instance:com.flipkart.FlipkartAutomatePOM@6f204a1a]" started-at="2022-12-02T12:33:18 IST" name="closeServer" finished-at="2022-12-02T12:33:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeServer -->
      </class> <!-- com.flipkart.FlipkartAutomatePOM -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
